plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'org.javamodularity.moduleplugin' version '1.8.12'
}

group 'al.aoli.exchain.runtime'
version 'unspecified'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation group: 'org.ow2.asm', name: 'asm', version: '9.3'
    implementation group: 'org.ow2.asm', name: 'asm-commons', version: '9.3'
    implementation group: 'org.ow2.asm', name: 'asm-analysis', version: '9.3'
    implementation group: 'io.github.microutils', name: 'kotlin-logging-jvm', version: '2.1.23'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.36'
    implementation("com.github.ajalt.mordant:mordant:2.0.0-beta7")
    compileOnly 'edu.gmu.swe.phosphor:phosphor-instrument-jigsaw:0.1.0-SNAPSHOT'
}

test {
    useJUnitPlatform()
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
task createShadow(type: ShadowJar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveBaseName.set('out')
    archiveClassifier.set('')
    archiveVersion.set('')
    relocate 'org.objectweb.asm', 'al.aoli.exchain.instrumentation.asm'
    relocate 'org.slf4j', 'al.aoli.exchain.instrumentation.slf4j'
    dependsOn ':native:linkDebug'
    exclude "module-info.class"
    from sourceSets.main.output
    from { project.configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes "Main-Class": "edu.columbia.cs.psl.jigsaw.phosphor.instrumenter.StandaloneJVMInstrumenter"
        attributes "Premain-Class": "edu.columbia.cs.psl.jigsaw.phosphor.instrumenter.JLinkRegistrationAgent"
    }
}

task mergedJar(type: Jar) {
    archiveBaseName.set("runtime")
    archiveClassifier.set("")
    from zipTree("${project.rootProject.projectDir}/dependencies/phosphor/" +
            "phosphor-instrument-jigsaw/target/phosphor-instrument-jigsaw-0.1.0-SNAPSHOT.jar")
    from zipTree("${project.buildDir}/libs/out.jar")
    manifest {
        attributes "Main-Class": "edu.columbia.cs.psl.jigsaw.phosphor.instrumenter.StandaloneJVMInstrumenter"
        attributes "Premain-Class": "edu.columbia.cs.psl.jigsaw.phosphor.instrumenter.JLinkRegistrationAgent"
    }
//    dependsOn buildPhosphor
    dependsOn createShadow
}

task buildPhosphor(type: Exec) {
    commandLine "./mvnw", "-DskipTests", "install"
    workingDir "${project.rootProject.projectDir}/dependencies/phosphor/"
}

import org.gradle.internal.jvm.Jvm
task createInstrumentedJDK(type: JavaExec) {
    var jarPath = "$buildDir/libs/${project.name}.jar"
    var phosphor = project(":phosphor")
    classpath "$phosphor.buildDir/libs/${phosphor.name}.jar"
    classpath jarPath
    mainClass = "edu.columbia.cs.psl.jigsaw.phosphor.instrumenter.StandaloneJVMInstrumenter"
    var src = Jvm.current().javaHome
//    var src = "/Users/aoli/repos/jdk/build/macosx-x86_64-server-release/images/jdk"
    var dst = "$buildDir/jre-inst"
    args src, dst, "--jvmModules", "ALL-MODULE-PATH",
            "-taintTagFactory", "al.aoli.exchain.phosphor.instrumenter.DynamicSwitchTaintTagFactory",
            "-priorClassVisitor", "al.aoli.exchain.phosphor.instrumenter.DynamicSwitchPreCV",
            "-postClassVisitor", "al.aoli.exchain.phosphor.instrumenter.DynamicSwitchPostCV",
            "-addExports", "al/aoli/exchain/runtime,kotlin/jvm/internal"
    environment "CLASSPATH", "$phosphor.buildDir/libs/${phosphor.name}.jar"
    dependsOn ":phosphor:jar"
    dependsOn mergedJar
}

