
plugins {
	id 'java'
	id 'application'
}

group 'al.aoli.exchain.demo'
version '1.0-SNAPSHOT'

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	compileOnly  'edu.gmu.swe.phosphor:Phosphor:0.1.0-SNAPSHOT'
	compileOnly project(path: ":runtime", configuration: "shadow")
}

test {
	useJUnitPlatform()
}

application {
	mainClass = 'al.aoli.exchain.demo.Main'
}

run {
}

task instrumentJarWithDynSwitch(type: JavaExec) {
	// This looks hacky...
	var phosphor = project(":phosphor")
	classpath "$phosphor.buildDir/libs/${phosphor.name}.jar"
	mainClass = "edu.columbia.cs.psl.phosphor.Instrumenter"
	var jarPath = "${project.rootProject.projectDir}/dependencies/phosphor/Phosphor/target/Phosphor-0.1.0-SNAPSHOT.jar"
	classpath jarPath
	var src= jar.getArchiveFile().get().asFile.absolutePath
	var dst = "${buildDir}/libs/instrumented-dyn-switch"
	args src, dst,
			"-taintTagFactory", "al.aoli.exchain.phosphor.instrumenter.DynamicSwitchTaintTagFactory"
	dependsOn jar
	dependsOn ":phosphor:jar"
}

task instrumentJarOrigin(type: JavaExec) {
	// This looks hacky...
	var phosphor = project(":phosphor")
	classpath "$phosphor.buildDir/libs/${phosphor.name}-merged.jar"
	mainClass = "edu.columbia.cs.psl.phosphor.Instrumenter"
	var src= jar.getArchiveFile().get().asFile.absolutePath
	var dst = "${buildDir}/libs/instrumented-origin"
	jvmArgs "-DPhosphor.INSTRUMENTATION_CLASSPATH=${buildDir}/libs/instrumented_classes"
	jvmArgs "-DPhosphor.ORIGIN_CLASSPATH=${buildDir}/libs/origin_classes"
	args src, dst,
			"-taintTagFactory", "al.aoli.exchain.phosphor.instrumenter.DynamicSwitchTaintTagFactory"
	dependsOn jar
}

task instrumentJarHybrid(type: JavaExec) {
	// This looks hacky...
	var phosphor = project(":phosphor")
	classpath "$phosphor.buildDir/libs/${phosphor.name}-merged.jar"
	mainClass = "edu.columbia.cs.psl.phosphor.Instrumenter"
	var src= jar.getArchiveFile().get().asFile.absolutePath
	var dst = "${buildDir}/libs/instrumented-hybrid"
	jvmArgs "-DPhosphor.INSTRUMENTATION_CLASSPATH=${buildDir}/libs/hybrid_instrumented_classes"
	jvmArgs "-DPhosphor.ORIGIN_CLASSPATH=${buildDir}/libs/hybrid_origin_classes"
	args src, dst,
			"-taintTagFactory", "al.aoli.exchain.phosphor.instrumenter.FieldOnlyTaintTagFactory"
	dependsOn jar
}

task instrumentCustomJarOriginDebug(type: JavaExec) {
	// This looks hacky...
	var phosphor = project(":phosphor")
	classpath "$phosphor.buildDir/libs/${phosphor.name}-merged.jar"
	mainClass = "edu.columbia.cs.psl.phosphor.Instrumenter"
	var jarPath = "${project.rootProject.projectDir}/dependencies/phosphor/Phosphor/target/Phosphor-0.1.0-SNAPSHOT.jar"
	classpath jarPath
//	jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=localhost:5005"
//	var src= "/Users/aoli/tests/classes"
	var src= jar.getArchiveFile().get().asFile.absolutePath
	var dst = "/tmp"
	jvmArgs "-DPhosphor.DEBUG=true"
	args src, dst,
			"-taintTagFactory", "al.aoli.exchain.phosphor.instrumenter.DynamicSwitchTaintTagFactory"
//			"-priorClassVisitor", "al.aoli.exchain.phosphor.instrumenter.UninstrumentedOriginPreCV",
//			"-postClassVisitor", "al.aoli.exchain.phosphor.instrumenter.UninstrumentedOriginPostCV"
	dependsOn jar
}

task runOriginJar(type: JavaExec) {
	var runtime = project(":runtime")
	classpath "${buildDir}/libs/${project.name}-${version}.jar"
	jvmArgs "-javaagent:${runtime.buildDir}/libs/runtime-shadow." +
			"jar=static:/Users/aoli/repos/exchain/demo/build/libs/origin_classes"
	mainClass = "al.aoli.exchain.demo.Main"
	var nat= project(":native")
	jvmArgs "-agentpath:${nat.buildDir}/lib/main/debug/lib${nat.name}.dylib=exchain:Lal/aoli/exchain/demo"
	var instrumentation = project(":instrumentation")
	dependsOn jar
}



task runNaiveTaintAnalysis(type: JavaExec) {
	var runtime = project(":runtime")
	executable = "${runtime.buildDir}/jre-inst/bin/java"
	classpath "${buildDir}/libs/instrumented-origin/${project.name}-${version}.jar"
	mainClass = "al.aoli.exchain.demo.Main"
	jvmArgs "-DPhosphor.INSTRUMENTATION_CLASSPATH=instrumented_classes"
	jvmArgs "-DPhosphor.ORIGIN_CLASSPATH=origin_classes"
	jvmArgs "-DPhosphor.DEBUG=true"
	jvmArgs "-javaagent:${project.rootProject.projectDir}/" +
			"dependencies/phosphor/phosphor-jigsaw-javaagent/target/" +
			"phosphor-jigsaw-javaagent-0.1.0-SNAPSHOT.jar"
	var nat= project(":native")
	jvmArgs "-agentpath:${nat.buildDir}/cmake/native_release/linux-amd64/cpp/lib${nat.name}.so=exchain:Lal/aoli/exchain/demo"
	var instrumentation = project(":instrumentation")
	jvmArgs "-javaagent:${runtime.buildDir}/libs/${runtime.name}-shadow." +
			"jar=dynamic:${buildDir}/libs/instrumented_classes"
}

task runHybridTaintAnalysis(type: JavaExec) {
	var runtime = project(":runtime")
	executable = "${runtime.buildDir}/jre-inst-field-only/bin/java"
	classpath "${buildDir}/libs/instrumented-hybrid/${project.name}-${version}.jar"
	mainClass = "al.aoli.exchain.demo.Main"
	jvmArgs "-DPhosphor.INSTRUMENTATION_CLASSPATH=hybrid_instrumented_classes"
	jvmArgs "-DPhosphor.ORIGIN_CLASSPATH=hybrid_origin_classes"
	jvmArgs "-javaagent:${project.rootProject.projectDir}/" +
			"dependencies/phosphor/phosphor-jigsaw-javaagent/target/" +
			"phosphor-jigsaw-javaagent-0.1.0-SNAPSHOT.jar"
	var nat= project(":native")
	jvmArgs "-agentpath:${nat.buildDir}/lib/main/debug/lib${nat.name}.dylib=exchain:Lal/aoli/exchain/demo"
	jvmArgs "-javaagent:${runtime.buildDir}/libs/${runtime.name}-shadow." +
			"jar=hybrid:${buildDir}/libs/instrumented_classes"
}

task runTaintAnalysisWithDynSwitch(type: JavaExec) {
	var runtime = project(":runtime")
	executable = "${runtime.buildDir}/jre-inst-dyn-switch/bin/java"
	classpath "${buildDir}/libs/instrumented/${project.name}-${version}.jar"
	mainClass = "al.aoli.exchain.demo.Main"
	var instrumentation = project(":instrumentation")
	jvmArgs "--patch-module=java.base=/Users/aoli/repos/exchain/phosphor/build/libs/phosphor.jar"
	jvmArgs "-javaagent:${project.rootProject.projectDir}/" +
			"dependencies/phosphor/phosphor-jigsaw-javaagent/target/" +
			"phosphor-jigsaw-javaagent-0.1.0-SNAPSHOT.jar"
	var nat= project(":native")
	jvmArgs "-agentpath:${nat.buildDir}/lib/main/debug/lib${nat.name}.dylib"

	dependsOn ":instrumentation:shadowJar"
	dependsOn ":native:build"
}


runTaintAnalysisWithDynSwitch.dependsOn instrumentJarWithDynSwitch
runNaiveTaintAnalysis.dependsOn instrumentJarOrigin
runHybridTaintAnalysis.dependsOn instrumentJarHybrid
//runInstrumentedJar.dependsOn ":runtime:createInstrumentedJDK"

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	manifest {
		attributes "Main-Class": "al.aoli.exchain.demo.Main"
	}

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}

	dependsOn ":runtime:createShadow"
	dependsOn ":native:build"
	dependsOn ":phosphor:mergedJar"
}
